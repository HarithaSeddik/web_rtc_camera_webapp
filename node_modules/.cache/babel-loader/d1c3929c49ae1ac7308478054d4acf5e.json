{"ast":null,"code":"var _jsxFileName = \"/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { version, useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport DeviceMenu from './components/DeviceMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [devicesList, setDevicesList] = useState([]);\n\n  var noop = function () {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  };\n\n  async function checkCameraPermisson(permissionName, descriptor) {\n    let promptCameraPermission;\n\n    try {\n      let permission = await navigator.permissions.query(Object.assign({\n        name: permissionName\n      }, descriptor));\n      console.log(`${permissionName}'s Permission state: ${permission.state}`);\n\n      if (permission.state == \"prompt\") {\n        console.log('should... try to prompt camera permission!!!!!');\n        promptCameraPermission = true;\n        return promptCameraPermission;\n      } else {\n        console.log('shouldnt try to prompt camera permission!!!!!');\n        promptCameraPermission = false;\n        return promptCameraPermission;\n      }\n    } catch (e) {\n      console.log(`${permissionName}'s Permission error: ${e}`);\n    }\n\n    return promptCameraPermission;\n  }\n\n  const requestUserMediaPermission = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    }, noop, function (err) {\n      console.log('---');\n      console.log('# Inside Error Callback');\n      console.log(err);\n    });\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n    });\n  };\n\n  const getHardwareDevices = async () => {\n    const tempDeviceList = [];\n    let promptCameraPermission = await checkCameraPermisson(\"camera\");\n    console.log(`from getHardwareDevice()... shouldPromptCameraPermission:${promptCameraPermission}`);\n\n    if (promptCameraPermission) {\n      console.log(\"im gonna ask for permission now.. \");\n      await requestUserMediaPermission();\n    }\n\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      devices.forEach(function (device) {\n        if (device.kind == \"videoinput\") {\n          tempDeviceList.push(device);\n        }\n      });\n      setDevicesList(tempDeviceList);\n    });\n  };\n\n  const TitleDiv = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Camera API WebApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }; // const DeviceMenu = () => {\n  //   useEffect(() => {\n  //     // You need to restrict it at some point\n  //     // This is just dummy code and should be replaced by actual\n  //     if (devicesList.length > 0) return;\n  //     getHardwareDevices();\n  //   }, [devicesList]);\n  //   return (\n  //     <div className=\"deviceMenuContainer\">\n  //       <div className=\"deviceMenuDropdown\">\n  //         <FormControl fullWidth>\n  //           <InputLabel id=\"demo-simple-select-label\">SELECT DEVICE</InputLabel>\n  //           <Select\n  //             labelId=\"demo-simple-select-label\"\n  //             id=\"demo-simple-select\"\n  //             value={selectedDevice}\n  //             label=\"selected device\"\n  //             onChange={(event) => {\n  //               setSelectedDevice(event.target.value);\n  //             }}\n  //           >\n  //             {devicesList.map((device, i) => (\n  //               <MenuItem value={device.label} key={i}> {device.label}</MenuItem>\n  //             ))}\n  //           </Select>\n  //         </FormControl>\n  //       </div>\n  //       <div className=\"selectedDevice\">\n  //         <p>Selected Device</p>\n  //         <div> { \n  //         devicesList.length > 0?\n  //         selectedDevice : 'NULL'\n  //         }</div>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n\n  const controlsBar = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controlsBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            color: \"secondary\",\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [TitleDiv(), DeviceMenu(), controlsBar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pLnqw8qja+owj4gTo8qP8gBoHsM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","version","useState","useEffect","Button","FormControl","InputLabel","Select","MenuItem","DeviceMenu","App","selectedDevice","setSelectedDevice","devicesList","setDevicesList","noop","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","checkCameraPermisson","permissionName","descriptor","promptCameraPermission","permission","permissions","query","Object","assign","name","console","log","state","e","requestUserMediaPermission","stream","mediaDevices","video","err","getTracks","forEach","track","stop","getHardwareDevices","tempDeviceList","enumerateDevices","then","devices","device","kind","push","TitleDiv","controlsBar"],"sources":["/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport React, { version, useState, useEffect } from \"react\";\n\nimport Button from \"@mui/material/Button\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport DeviceMenu from './components/DeviceMenu'\nfunction App() {\n  const [selectedDevice, setSelectedDevice] = useState('');\n  const [devicesList, setDevicesList] = useState([]);\n  \n\n  var noop = function () {\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n  };\n\n  async function checkCameraPermisson(permissionName, descriptor) {\n    let promptCameraPermission ;\n    try {\n      let permission = await navigator.permissions\n        .query(Object.assign({ name: permissionName }, descriptor));\n        \n        console.log(\n          `${permissionName}'s Permission state: ${permission.state}`\n        );\n        if (permission.state == \"prompt\") {\n          console.log('should... try to prompt camera permission!!!!!');\n           promptCameraPermission = true;\n          return promptCameraPermission\n        } else {\n          console.log('shouldnt try to prompt camera permission!!!!!');\n          promptCameraPermission =  false;\n          return promptCameraPermission\n        }\n  } catch(e) {\n    console.log(\n      `${permissionName}'s Permission error: ${e}`\n    );\n  }\n  return promptCameraPermission;\n\n}\n\n  const requestUserMediaPermission = async () => {\n\n    const stream = await navigator.mediaDevices.getUserMedia(\n      { video: true },\n      noop,\n      function(err){\n        console.log('---');\n        console.log('# Inside Error Callback');\n        console.log(err);\n      }\n    );\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n    });\n\n  };\n\n  const getHardwareDevices = async () => {\n    const tempDeviceList = [];\n\n    let promptCameraPermission = await checkCameraPermisson(\"camera\")\n    console.log(`from getHardwareDevice()... shouldPromptCameraPermission:${promptCameraPermission}`)\n    \n    if (promptCameraPermission) {\n      console.log(\"im gonna ask for permission now.. \");\n       await requestUserMediaPermission();\n    }\n\n    \n\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      devices.forEach(function (device) {\n        \n        if (device.kind == \"videoinput\") {\n          tempDeviceList.push(device);\n\n        }\n      });\n      setDevicesList(tempDeviceList);\n\n    });\n  };\n\n  const TitleDiv = () => {\n    return (\n      <div className=\"titleDiv\">\n        <h1> Camera API WebApp</h1>\n      </div>\n    );\n  };\n\n  // const DeviceMenu = () => {\n  //   useEffect(() => {\n  //     // You need to restrict it at some point\n  //     // This is just dummy code and should be replaced by actual\n\n  //     if (devicesList.length > 0) return;\n  //     getHardwareDevices();\n  //   }, [devicesList]);\n\n  //   return (\n  //     <div className=\"deviceMenuContainer\">\n  //       <div className=\"deviceMenuDropdown\">\n  //         <FormControl fullWidth>\n  //           <InputLabel id=\"demo-simple-select-label\">SELECT DEVICE</InputLabel>\n  //           <Select\n  //             labelId=\"demo-simple-select-label\"\n  //             id=\"demo-simple-select\"\n  //             value={selectedDevice}\n  //             label=\"selected device\"\n  //             onChange={(event) => {\n  //               setSelectedDevice(event.target.value);\n  //             }}\n  //           >\n  //             {devicesList.map((device, i) => (\n  //               <MenuItem value={device.label} key={i}> {device.label}</MenuItem>\n  //             ))}\n  //           </Select>\n  //         </FormControl>\n  //       </div>\n  //       <div className=\"selectedDevice\">\n  //         <p>Selected Device</p>\n  //         <div> { \n  //         devicesList.length > 0?\n  //         selectedDevice : 'NULL'\n  //         }</div>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  const controlsBar = () => {\n    return (\n      <>\n        <div className=\"controlsBar\">\n          <div>\n            <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n              Start Recording\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"App\">\n      {TitleDiv()}\n      {DeviceMenu()}\n      {controlsBar()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}