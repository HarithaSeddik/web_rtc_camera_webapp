{"ast":null,"code":"var _jsxFileName = \"/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { version, useState, useEffect } from \"react\";\nimport DeviceMenu from \"./components/DeviceMenu\";\nimport Camera from \"./components/Camera\";\nimport ControlsBar from \"./components/ControlsBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [cameraState, setCameraState] = useState(false);\n\n  const TitleDiv = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Camera Webapp, WebRTC API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    console.log('re-rendering camera...');\n    renderCamera();\n  }, [selectedDevice]);\n\n  const onDeviceSelected = selectedDevice => {\n    setSelectedDevice(selectedDevice);\n  };\n\n  const onCameraToggle = () => {\n    if (selectedDevice == null) {\n      setCameraState(false);\n      return;\n    }\n\n    setCameraState(!cameraState);\n    console.log(`show Camera State: ${cameraState}`);\n  };\n\n  const renderCamera = () => {\n    if (selectedDevice != null && cameraState) {\n      return /*#__PURE__*/_jsxDEV(Camera, {\n        deviceId: selectedDevice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [TitleDiv(), /*#__PURE__*/_jsxDEV(DeviceMenu, {\n      onDeviceSelected: onDeviceSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlsBar, {\n      onCameraToggle: onCameraToggle,\n      cameraState: cameraState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), renderCamera()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WEaLUuYKB8sE6cC1fMxW2qtXGTc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","version","useState","useEffect","DeviceMenu","Camera","ControlsBar","App","selectedDevice","setSelectedDevice","cameraState","setCameraState","TitleDiv","console","log","renderCamera","onDeviceSelected","onCameraToggle"],"sources":["/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport React, { version, useState , useEffect} from \"react\";\n\nimport DeviceMenu from \"./components/DeviceMenu\";\nimport Camera from \"./components/Camera\";\nimport ControlsBar from \"./components/ControlsBar\";\nfunction App() {\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [cameraState, setCameraState] = useState(false);\n\n  const TitleDiv = () => {\n    return (\n      <div className=\"titleDiv\">\n        <h1> Camera Webapp, WebRTC API</h1>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    console.log('re-rendering camera...');\n    renderCamera()\n  }, [selectedDevice])\n  \n  const onDeviceSelected = (selectedDevice) => {\n    setSelectedDevice(selectedDevice);\n  };\n\n  const onCameraToggle = () => {\n    if (selectedDevice == null){\n      setCameraState(false);\n      return;\n    }\n    setCameraState(!cameraState);\n    console.log(`show Camera State: ${cameraState}`);\n  };\n  const renderCamera = () => {\n    if (selectedDevice != null && cameraState) {\n      return <Camera deviceId={selectedDevice}  />;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {TitleDiv()}\n      <DeviceMenu onDeviceSelected={onDeviceSelected} />\n\n      <ControlsBar onCameraToggle={onCameraToggle} cameraState={cameraState} />\n      {renderCamera()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAoCC,SAApC,QAAoD,OAApD;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;EAEA,MAAMU,QAAQ,GAAG,MAAM;IACrB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD,CAND;;EAQAT,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAR,CAAY,wBAAZ;IACAC,YAAY;EACb,CAHQ,EAGN,CAACP,cAAD,CAHM,CAAT;;EAKA,MAAMQ,gBAAgB,GAAIR,cAAD,IAAoB;IAC3CC,iBAAiB,CAACD,cAAD,CAAjB;EACD,CAFD;;EAIA,MAAMS,cAAc,GAAG,MAAM;IAC3B,IAAIT,cAAc,IAAI,IAAtB,EAA2B;MACzBG,cAAc,CAAC,KAAD,CAAd;MACA;IACD;;IACDA,cAAc,CAAC,CAACD,WAAF,CAAd;IACAG,OAAO,CAACC,GAAR,CAAa,sBAAqBJ,WAAY,EAA9C;EACD,CAPD;;EAQA,MAAMK,YAAY,GAAG,MAAM;IACzB,IAAIP,cAAc,IAAI,IAAlB,IAA0BE,WAA9B,EAA2C;MACzC,oBAAO,QAAC,MAAD;QAAQ,QAAQ,EAAEF;MAAlB;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;EACF,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WACGI,QAAQ,EADX,eAEE,QAAC,UAAD;MAAY,gBAAgB,EAAEI;IAA9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE,QAAC,WAAD;MAAa,cAAc,EAAEC,cAA7B;MAA6C,WAAW,EAAEP;IAA1D;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGK,YAAY,EALf;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA5CQR,G;;KAAAA,G;AA8CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}