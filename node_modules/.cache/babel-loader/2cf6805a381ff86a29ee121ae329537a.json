{"ast":null,"code":"var _jsxFileName = \"/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { version, useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [selectedDevice, setSelectedDeivce] = useState(0);\n  const [devicesList, setDevicesList] = useState([]);\n  const [shouldPromptCameraPermisson, setShouldPromptCameraPermission] = useState(false);\n\n  var noop = function () {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  };\n\n  async function shouldPromptPermisson(permissionName, descriptor) {\n    try {\n      navigator.permissions.query(Object.assign({\n        name: permissionName\n      }, descriptor)).then(function (permission) {\n        console.log(`${permissionName}'s Permission state: ${permission.state}`);\n\n        if (permission.state == \"prompt\") {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    } catch (e) {}\n  }\n\n  const requestUserMediaPermission = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    }, noop, noop);\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n    });\n  };\n\n  const getHardwareDevices = async () => {\n    let counter = 0;\n    const deviceMap = new Map([]);\n    setShouldPromptCameraPermission(await shouldPromptPermisson(\"camera\"));\n\n    if (shouldPromptCameraPermisson) {\n      console.log(\"im gonna ask for permission now.. \");\n      await requestUserMediaPermission();\n    }\n\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      devices.forEach(function (device) {\n        // console.log(\n        //   device.kind + \": \" + device.label + \" id = \" + device.deviceId\n        // );\n        if (device.kind == \"videoinput\") {\n          setDevicesList([...devicesList, device]); // deviceMap.set(device.deviceId, device.label);\n          // counter++;\n        } // console.log(deviceDict[deviceIds[0]]);\n        // console.log(deviceMap);\n\n      });\n    }); // setDevicesList(deviceMap);\n    // console.log(deviceMap)\n    // console.log(devicesList)\n    // return deviceMap;\n  };\n\n  const TitleDiv = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Camera API WebApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  };\n\n  const DeviceMenu = () => {\n    _s();\n\n    useEffect(() => {\n      // You need to restrict it at some point\n      // This is just dummy code and should be replaced by actual\n      // setDevicesList(getHardwareDevices());\n      getHardwareDevices();\n    }, []);\n    console.log(`My devices map... : ${devicesList}`);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceMenuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceMenuDropdown\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"SELECT DEVICE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: selectedDevice,\n            label: \"selected device\",\n            onChange: event => {\n              setSelectedDeivce(event.target.value);\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 0,\n              children: \"device 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 1,\n              children: \"device 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 2,\n              children: \"device 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectedDevice\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Selected Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" device 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(DeviceMenu, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const controlsBar = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controlsBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            color: \"secondary\",\n            children: \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [TitleDiv(), DeviceMenu(), controlsBar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"HVAeF8zLCygoA7uJvreN8+FvU00=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","version","useState","useEffect","Button","FormControl","InputLabel","Select","MenuItem","App","selectedDevice","setSelectedDeivce","devicesList","setDevicesList","shouldPromptCameraPermisson","setShouldPromptCameraPermission","noop","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","shouldPromptPermisson","permissionName","descriptor","permissions","query","Object","assign","name","then","permission","console","log","state","e","requestUserMediaPermission","stream","mediaDevices","video","getTracks","forEach","track","stop","getHardwareDevices","counter","deviceMap","Map","enumerateDevices","devices","device","kind","TitleDiv","DeviceMenu","event","target","value","controlsBar"],"sources":["/Users/kobil/Workspace/React_Projects/camera-webapp-poc/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport React, { version, useState, useEffect } from \"react\";\n\nimport Button from \"@mui/material/Button\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\n\nfunction App() {\n  const [selectedDevice, setSelectedDeivce] = useState(0);\n  const [devicesList, setDevicesList] = useState([]);\n  const [shouldPromptCameraPermisson, setShouldPromptCameraPermission] =\n    useState(false);\n\n  var noop = function () {\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n  };\n\n  async function shouldPromptPermisson(permissionName, descriptor) {\n    try {\n      navigator.permissions\n        .query(Object.assign({ name: permissionName }, descriptor))\n        .then(function (permission) {\n          console.log(\n            `${permissionName}'s Permission state: ${permission.state}`\n          );\n          if (permission.state == \"prompt\") {\n            return true;\n          } else {\n            return false;\n          }\n        });\n    } catch (e) {}\n  }\n\n  const requestUserMediaPermission = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia(\n      { video: true },\n      noop,\n      noop\n    );\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n    });\n  };\n\n  const getHardwareDevices = async () => {\n    let counter = 0;\n    const deviceMap = new Map([]);\n\n    setShouldPromptCameraPermission(await shouldPromptPermisson(\"camera\"));\n    if (shouldPromptCameraPermisson) {\n      console.log(\"im gonna ask for permission now.. \");\n      await requestUserMediaPermission();\n    }\n\n    navigator.mediaDevices.enumerateDevices().then(function (devices) {\n      devices.forEach(function (device) {\n        // console.log(\n        //   device.kind + \": \" + device.label + \" id = \" + device.deviceId\n        // );\n\n        if (device.kind == \"videoinput\") {\n          setDevicesList([...devicesList, device ])\n          // deviceMap.set(device.deviceId, device.label);\n          // counter++;\n        }\n        // console.log(deviceDict[deviceIds[0]]);\n        // console.log(deviceMap);\n      });\n    });\n    // setDevicesList(deviceMap);\n    // console.log(deviceMap)\n    // console.log(devicesList)\n    // return deviceMap;\n  };\n\n  const TitleDiv = () => {\n    return (\n      <div className=\"titleDiv\">\n        <h1> Camera API WebApp</h1>\n      </div>\n    );\n  };\n\n  const DeviceMenu =  () => {\n    useEffect(() => {\n      // You need to restrict it at some point\n      // This is just dummy code and should be replaced by actual\n      // setDevicesList(getHardwareDevices());\n      getHardwareDevices()\n    }, []);\n     \n    console.log(`My devices map... : ${devicesList}`);\n    return (\n      <div className=\"deviceMenuContainer\">\n        <div className=\"deviceMenuDropdown\">\n          <FormControl fullWidth>\n            <InputLabel id=\"demo-simple-select-label\">SELECT DEVICE</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={selectedDevice}\n              label=\"selected device\"\n              onChange={(event) => {\n                setSelectedDeivce(event.target.value);\n              }}\n            >\n              {/* {jsonData.experiences.map((experience, i) => (\n            <>{experienceDiv(experience.id)}</>\n            ))} */}\n              {/* {devicesList.map( (device, i) => (<>\n            \n              <MenuItem value={device.deviceId}> {device.label}</MenuItem>\n            </>)) \n            } */}\n              <MenuItem value={0}>device 1</MenuItem>\n              <MenuItem value={1}>device 2</MenuItem>\n              <MenuItem value={2}>device 3</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"selectedDevice\">\n          <p>Selected Device</p>\n          <div> device 2</div>\n        </div>\n      </div>\n    );\n  };\n\n  const controlsBar = () => {\n    return (\n      <>\n        <div className=\"controlsBar\">\n          <div>\n            <Button variant=\"contained\" size=\"small\" color=\"secondary\">\n              Start Recording\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"App\">\n      {TitleDiv()}\n      {DeviceMenu()}\n      {controlsBar()}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}